openapi: 3.0.0
info:
  title: Andro
  description: API for users and their associated account attributes. Initial implementation is simple CRUD api. More operation may be added later.
  version: 1.0.0-prealpha
servers:
  - url: 'https'
paths:
  "/andro":
    post:
      description: Generates a new userId and associates with user provided attributes then stores it to the user DB
      responses:
        '201': # resource created
          description: JSON array of new user object with ID and identifying information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResourceResponse'
        '400': # bad request in submission
          description: JSON array with status code and offending submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                BadSubmission:
                  value:
                    status: 400.1
                    message: This email is already in use! Did you want to login instead?

  "/andro/{userId}":
    get:
      description: Retrieve the information and resource attributes associated with an existing user
      parameters:
        - $ref: '#/components/parameters/UserIDParam'
      responses:
        '200': # resource read
          description: JSON array of user object with ID and identifying information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResourceResponse'
        '400': # bad request in submission
          description: JSON array with status code and offending submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                BadSubmission:
                  value:
                    status: 400.2
                    message: The userId format is incorrect!
        '404':
          description: Error thrown if userId could not be found or does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              examples:
                UserNotFound:
                  value:
                    status: 404.2
                    message: The userId could not be found or does not exist.

    put:
      description: Update information or atttributes associated with an existing user
      parameters:
        - $ref: '#/components/parameters/UserIDParam'
      responses:
        '200': # resource updated
          description: JSON array of updated user object with ID and identifying information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResourceResponse'
        '400': # bad request in submission
          description: JSON array with status code and offending submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                BadSubmission:
                  value:
                    status: 400.3
                    message: the userId format is incorrect!
        '404':
          description: Error thrown if userId could not be found or does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              examples:
                UserNotFound:
                  value:
                    status: 404.3
                    message: The userId could not be found or does not exist.

    delete:
      description: delete the resource associated with an existing user, rendering them nonexistent
      parameters:
        - $ref: '#/components/parameters/UserIDParam'
      responses:
        '204': # resource deleted
          description: JSON array of user object with ID and identifying information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourceResponse'
        '400': # bad request in submission
          description: JSON array with status code and offending submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                BadSubmission:
                  value:
                    status: 400.4
                    message: the userId format is incorrect!
        '404':
          description: Error thrown if userId could not be found or does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              examples:
                UserNotFound:
                  value:
                    status: 404.4
                    message: The userId could not be found or does not exist.

components:
  schemas:
    UserResourceResponse:
      type: object
      properties:
        status:
          type: integer
        data:
          $ref: '#/components/schemas/UserObject'
    DeleteResourceResponse:
      type: object
      properties:
        status:
          type: integer
    UserObject:
      type: object
      properties:
        userId:
          type: integer
          example: 12345
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: johndoe@email.com
    BadRequest:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
    NotFound:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
    ServerError:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
  parameters:
    UserIDParam:
      in: path
      name: userId
      required: true
      schema:
        type: string


  
